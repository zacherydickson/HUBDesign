1. Get Document Summaries for all Complete Coronavirus Genomes:
    perl DlGenBank.pl -st -f orgn -g refseq -l 20000-40000 -o 'complete+genome[All+Fields]' 11118 > DocSum.xml
2. Parse Document Summaries to map between accessions and taxids:
    perl Summary2GenomeInfo.pl DocSum.xml > GenomeInfo.tab
3. Get Taxonomy for all txids:
    cut -f2 GenomeInfo.tab | sort | uniq > txid.list
    GetTaxonomy.sh txid.list > Taxonomy.xml
4. CreateLineageTree, TaxIDMap, and RankOrder List:
    perl CreateLineageTree.pl -T Taxonomy.xml > Taxonomy.tree
5. Prune the Tree:
    perl PruneLeaves.pl txid.list Taxonomy.trie > Pruned.tree
6. Handle Multiple Genomes per taxid:
    perl HandleMultipleAssemblies.pl -i GenomeInfo.tab -I Pruned.trie -j txIDMap.csv -J rankOrder.list
7. Download the identified Sequences:
    DownloadGenomes.sh -o data/Genomes GenomeInfo.tab
8. Annotate All Genomes with Prokka:
    batchPROKKA -o data/annotations -t Threads -k Viruses data/Genomes/*
9. Determine which genes are in which taxa, and the locations within the genomes:
    perl GetGeneInfo.pl data/annotations/* > GeneInfo.tab
10. Run Clustering:
    ClusterGenes.sh Threads GenCode R2TipDist ClusterInfo.tab GeneInfo.tab SeqFile > ConsensusSeq.fna
SPECIAL NOTE: MOVED 1508220 to Merbecovirus clade based on consistent gene clustering
11. Create Pseudo-Organisms:
    CreatePseudoOrg.sh Threads 50 ClusterInfo.tab Pruned.tree POInfo.tab ClustAssign.tab ConsensusSeq.fna > PseudoOrgs.fna
12. Run Through BOND:
    SA_BOND PseudoOrgs.fna PO.oligs -length 75 -maxOligs -1 > BOND.log
13. ReshapeOlig File:
    reshapeOligFile.sh PO.oligs <(awk '/^>/ {print substr($0,2)}' PseudoOrgs.fna) > PO.tab
14. Identify Duplicate Baits:
    perl identifyDuplicates.pl PO.tab > DupInfo.tab
15. Filter against self:
    selfBlastFilter.sh Threads PO.tab DupInfo.tab > SelfExclude.list
16. Filter against human:
    humanBlastFiler.sh Threads PO.tab DupInfo.tab GRCh38BlastDB SelfExclude.list > HumanExclude.list
17. Collapse To Regions:
    perl collapseBaits.pl <(cat *Exclude.list) DupInfo.tab PO.tab > RegionInfo.tab
18. LCR Filter:
    LCRFilter.sh RegionInfo.tab > LCRFiltRegionInfo.tab
    kingdomBlastFilter.sh Threads LCRFiltRegionInfo.tab EmptyFile NTBlastDB Viruses <(cat *Exclude.list) > NonViralIV.tab
    perl ExcludeIntervals.pl NonViralIV.tab LCRFiltRegionInfo.tab > FiltRegionInfo.tab
19. Run Tiling:
    runtiling.sh MinDensity(5) MaxBaits(13500) POInfo.tab FiltRegionInfo.tab TileInfo.tab > Baits.fna
SPECIAL NOTE: Tiling was down balancing each pseudo organisms independently,
to maximize the baits at every level, rather than balancing on the leaves,
which was reducing more specific baits.
SPECIAL NOTE: Tiling was performed multiple times, not recording the results
to find the minimal max baits number (The lowest number where there were no warnings for
having No Med Class orgs, rounded up to the nearest quarter thousand)
20. Create Bait Info:
    createBaitInfo.sh TileInfo.tab Baits.fna > BaitInfo.tab
